name: Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'

jobs:
  validation:
    runs-on: ubuntu-latest
    name: Code Validation (Pre-commit Checks)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run Pint Check (Code Style)
        run: composer pint --test

  tests:
    runs-on: ubuntu-latest
    name: PHP 8.4 - Laravel 12.x

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Execute tests via Pest with coverage
        run: vendor/bin/pest --coverage --coverage-format=clover --coverage-output=coverage.xml

      - name: Calculate coverage percentage
        id: coverage
        run: |
          # Extract coverage percentage from XML
          COVERAGE=$(grep -o 'percentage="[^"]*"' coverage.xml | head -1 | grep -o '[0-9]*\.[0-9]*')
          COVERAGE_INT=$(printf "%.0f" $COVERAGE)
          
          # Determine color based on coverage
          if [ $COVERAGE_INT -ge 80 ]; then
            COLOR="brightgreen"
          elif [ $COVERAGE_INT -ge 60 ]; then
            COLOR="yellow"
          else
            COLOR="red"
          fi
          
          echo "coverage=$COVERAGE_INT" >> $GITHUB_OUTPUT
          echo "color=$COLOR" >> $GITHUB_OUTPUT

      - name: Update README with coverage badge
        run: |
          # Create the badge URL
          BADGE_URL="https://img.shields.io/badge/coverage-${{ steps.coverage.outputs.coverage }}%25-${{ steps.coverage.outputs.color }}.svg"
          
          # Update README.md with the new badge
          sed -i "s|https://img.shields.io/badge/coverage-[0-9]*%25-[a-z]*.svg|$BADGE_URL|g" README.md
          
          # Commit the changes if they were made
          if git diff --quiet README.md; then
            echo "No changes to README.md"
          else
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "Update coverage badge to ${{ steps.coverage.outputs.coverage }}%"
            git push
          fi
